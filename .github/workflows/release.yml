name: goreleaser

on: 
  release:
    types: [created]

permissions:
  contents: write

jobs:
  goreleaser:
    strategy:
      matrix:
        os: [ubuntu-latest, ARM64, ARM]
        include:
          # specify the config file id to be executed for each different OS
          - os: ubuntu-latest
            build_id: "amd64"
          - os: ARM64
            build_id: "arm64"
          - os: ARM
            build_id: "arm"

    runs-on: ${{ matrix.os }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
        if: ${{ matrix.os != 'ARM' }}
      -
        name: Manually install Go for ARM
        env:
          GO_VER: go1.17.2
        run: "export GOPATH=$HOME/$(date +%s) && echo $GOPATH && mkdir -p $GOPATH && curl -s -L https://golang.org/dl/${GO_VER}.linux-armv6l.tar.gz | tar -C $GOPATH -xz; export PATH=$PATH:$GOPATH/go/bin; echo \"PATH=$PATH\" >> $GITHUB_ENV; go version"
        if: ${{ matrix.os == 'ARM' }}
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@master
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist -f .goreleaser.${{ matrix.build_id }}.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
